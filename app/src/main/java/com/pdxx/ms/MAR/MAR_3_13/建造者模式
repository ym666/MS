建造者模式：产品类、抽象建造类、具体实现类、指挥类
具体实现类实现抽象建造类的方法创建一个产品类对象，并总是有create方法返回这个产品对象
指挥类通过一定顺序通过具体实现类完成创建一个产品
客户端只用调用指挥类就可以创建一个对象。这就叫做建造者模式。

简便建造者模式:
省去指挥类和抽象建造类。在产品类里建立一个内部具体实现类，并在构造方法里作为参数。

优点：
1、在建造者模式中，客户端不必知道产品内部的细节，将产品本身于产品建造过程解耦。使得相同的创建过程可以创建不同的对象。
2、每一个具体建造者相互独立，与其他的具体建造者无关，因此可以很方便的建立新的具体建造者或者替换。由于指挥者建于抽象
建造者编程，所以新增或修改具体建造者不必修改原有代码，符合开闭原则
3、可以更加精细地在指挥者里控制产品构造过程。将复杂产品的构建过程分解在不同的方法中，过程更加清晰。

缺点：
不适合属性较多、变化较大的产品。可能会导致实现类过多代码过于臃肿。

https://www.jianshu.com/p/9fb6d5393f5c?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation